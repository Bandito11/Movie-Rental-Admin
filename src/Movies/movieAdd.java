/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Movies;

import Custom.MovieSchema;
import com.mysql.jdbc.Connection;
import com.mysql.jdbc.PreparedStatement;
import java.io.File;
import java.io.IOException;
import static java.lang.Integer.parseInt;
import java.nio.file.Files;
import java.nio.file.Path;
import java.nio.file.Paths;
import java.sql.DriverManager;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;

/**
 *
 * @author Bandito
 */
public class movieAdd extends javax.swing.JFrame {

    /**
     * Creates new form movieAdd
     */
    public movieAdd() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        fileChooser = new javax.swing.JFileChooser();
        directoryChooser = new javax.swing.JFileChooser();
        jButton1 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        Id = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        title = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        releaseDate = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        runTime = new javax.swing.JTextField();
        jLabel8 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        image = new javax.swing.JTextField();
        jButton3 = new javax.swing.JButton();
        genre = new javax.swing.JComboBox();
        rated = new javax.swing.JComboBox();
        jPanel1 = new javax.swing.JPanel();
        dvd = new javax.swing.JRadioButton();
        bluRay = new javax.swing.JRadioButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();

        directoryChooser.setDialogType(javax.swing.JFileChooser.CUSTOM_DIALOG);
        directoryChooser.setFileSelectionMode(javax.swing.JFileChooser.DIRECTORIES_ONLY);
        directoryChooser.setSelectedFile(new java.io.File("D:\\Files\\Documents\\NetBeansProjects"));

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setLocation(new java.awt.Point(150, 150));

        jButton1.setText("back");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jLabel2.setText("Title");

        jLabel3.setText("Release Date");

        jLabel4.setText("Genre");

        Id.setName("id"); // NOI18N
        Id.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                IdActionPerformed(evt);
            }
        });

        jLabel5.setText("Run Time");

        title.setName("title"); // NOI18N

        jLabel6.setText("Rated");

        releaseDate.setName("releaseDate"); // NOI18N

        jButton2.setText("Add New Movie");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        runTime.setName("runTime"); // NOI18N
        runTime.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                runTimeActionPerformed(evt);
            }
        });

        jLabel8.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel8.setText("Add New Movie");

        jLabel1.setText("Id");

        image.setEnabled(false);
        image.setName("zipCode"); // NOI18N

        jButton3.setText("Add Image");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        genre.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Action", "Comedy", "Drama", "Sci Fi", "Fantasy", "Foreign", "War", "Adventure", "Family", "Romance", "Musical", "Thriller", "Western", "Documentary", "History", "Animation", "Horror", "Biography", "Mystery", "Crime", "Film Noir" }));

        rated.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "G", "E", "R", "PG-13", "PG", "NC-17" }));

        jPanel1.setBorder(javax.swing.BorderFactory.createBevelBorder(javax.swing.border.BevelBorder.RAISED));

        dvd.setText("DVD");
        dvd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                dvdActionPerformed(evt);
            }
        });

        bluRay.setText("Blu-Ray");
        bluRay.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                bluRayActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(dvd)
                    .addComponent(bluRay))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(dvd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(bluRay)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel12.setText("yyyy/MM/DD");

        jLabel7.setText("hour:minutes:seconds");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jButton1)
                    .addComponent(jLabel8))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jLabel1)
                        .addGap(18, 18, 18)
                        .addComponent(Id, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(13, 13, 13)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel2)
                                    .addGap(18, 18, 18)
                                    .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel6)
                                    .addGap(18, 18, 18)
                                    .addComponent(rated, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGap(30, 30, 30))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addComponent(jLabel5)
                                    .addGap(18, 18, 18)
                                    .addComponent(runTime, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel3)
                                            .addGap(18, 18, 18))
                                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                            .addComponent(jLabel4)
                                            .addGap(18, 18, 18)))
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                        .addComponent(releaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(genre, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                            .addComponent(jButton3)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(image, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 124, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(jButton2, javax.swing.GroupLayout.Alignment.TRAILING)
                                .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel12)
                    .addComponent(jLabel7))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(Id, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(title, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel2))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(releaseDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel3)
                            .addComponent(jLabel12))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel4)
                            .addComponent(genre, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(runTime, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5)
                            .addComponent(jLabel7))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel6)
                            .addComponent(rated, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(image, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jButton3)))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jButton1)
                        .addGap(47, 47, 47)
                        .addComponent(jLabel8)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButton2)
                .addGap(17, 17, 17))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        Movies m = new Movies();
        m.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // TODO add your handling code here:
        if(Id.getText().length() == 0){
            JOptionPane.showMessageDialog(null, "Empty fields detected ! Please fill up all fields");
        }
        else if (title.getText().length() ==0){
            JOptionPane.showMessageDialog(null, "Empty fields detected ! Please fill up all fields");
        }
        else if (releaseDate.getText().length() ==0){
            JOptionPane.showMessageDialog(null, "Empty fields detected ! Please fill up all fields");
        }
        else if (runTime.getText().length() ==0){
            JOptionPane.showMessageDialog(null, "Empty fields detected ! Please fill up all fields");
        }else if(!dvd.isSelected() && !bluRay.isSelected()){
            JOptionPane.showMessageDialog(null, "Choose either if the movie is a DVD or a Blu-Ray!");
        }else{
            MovieSchema p = new MovieSchema();
            p.setId(parseInt(Id.getText()));
            p.setTitle(title.getText());
            p.setReleaseDate(releaseDate.getText());
            p.setGenre(genre.getSelectedItem().toString());
            p.setRunTime(runTime.getText());
            p.setRated(rated.getSelectedItem().toString());
            if(dvd.isSelected()){
                p.setDvd(true);
            }else{
                p.setDvd(false);
            }
            if(bluRay.isSelected()){
                p.setBluRay(true);
            }else{
                p.setBluRay(false);
            }
            validateAdd(p);
        }        // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

        private void validateAdd(MovieSchema p) {
            //Se utiliza para insertar data a la tabla de Movies
              try{                  
                  String query = "INSERT INTO Movies (MoviesID, Title, ReleaseDate, Genre, Runtime, Rated, Image, isDVD, isBluRay)" +
                    "VALUES (?, ?, ?, ?, ?, ?, ?, ?, ?)";
                    ////////////
                   Class.forName("com.mysql.jdbc.Driver");  // MySQL database connection
                   Connection conn = (Connection) DriverManager.getConnection("jdbc:mysql://us-cdbr-azure-east-a.cloudapp.net:3306/movierental?" + "user=b80812adafee28&password=5b6f9d25");     
                   PreparedStatement pst = (PreparedStatement) conn.prepareStatement(query);
                   //////////////////////////////
                   pst.setString(1, String.valueOf(p.getId())); 
                   pst.setString(2, p.getTitle());
                   pst.setString(3, p.getReleaseDate());
                   pst.setString(4, p.getGenre());
                   pst.setString(5, p.getRunTime());
                   pst.setString(6, p.getRated());  
                   pst.setString(7, p.getImage());
                   pst.setBoolean(8, p.getDvd());
                   pst.setBoolean(9, p.getBluRay());
                   pst.executeUpdate();  
                   JOptionPane.showMessageDialog(null, "Data was saved sccessfully");
                   conn.close();
               }
               catch(ClassNotFoundException | SQLException e){
                   JOptionPane.showMessageDialog(null, "There was some problem with the connection. Please try again!");
                   e.printStackTrace();
               }               
    }

    private void runTimeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_runTimeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_runTimeActionPerformed

    private void IdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_IdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_IdActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        // TODO add your handling code here:
        int returnVal = fileChooser.showOpenDialog(this);          
        if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file = fileChooser.getSelectedFile();
            try {
                convertImage(file);
            } catch (IOException ex) {
                Logger.getLogger(editMovies.class.getName()).log(Level.SEVERE, null, ex);
            }
        image.setText(file.getName());
    }                                        
    }//GEN-LAST:event_jButton3ActionPerformed

    private void dvdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_dvdActionPerformed
        // TODO add your handling code here:
        if(dvd.isSelected()){
            bluRay.setSelected(false);
        }
    }//GEN-LAST:event_dvdActionPerformed

    private void bluRayActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_bluRayActionPerformed
        // TODO add your handling code here:
        if(bluRay.isSelected()){
            dvd.setSelected(false);
        }
    }//GEN-LAST:event_bluRayActionPerformed

private void convertImage(File f) throws IOException{
    //Aqui se busca la data en el directorio que esta la imagen para despues copiarla al directorio
    //Movie Rental Client/images/. Despues de ello, se copia el string del path a una variable del MovieSchema
    JOptionPane.showMessageDialog(null, "Please save the file in the folder images inside your \\Movies Rental Client\\src\\Movies\\images in the folder where the PROGRAM is stored.");
    int returnVal = directoryChooser.showSaveDialog(this);
    Path FROM = Paths.get(f.getAbsolutePath());
    
    if (returnVal == JFileChooser.APPROVE_OPTION) {
        File file = directoryChooser.getCurrentDirectory();
        Path TO = Paths.get(file.getCanonicalPath() + "/images/" + f.getName());
        
    try {
        Files.copy(FROM, TO);
        } catch (IOException ex) {
            Logger.getLogger(editMovies.class.getName()).log(Level.SEVERE, null, ex);
        }    
        
    //*image.setText(file.getAbsolutePath() + "\\images\\" + m.getImage() );*
}                                        
   
    
    
//    JOptionPane.showMessageDialog(null, TO);
//        CopyOption[] options = new CopyOption[]{
//        StandardCopyOption.REPLACE_EXISTING,
//        StandardCopyOption.COPY_ATTRIBUTES
//         };
//            try {    
//                Files.copy(FROM, TO, options);
//                m.setImage(TO.toString());
//                return m;
//            } catch (IOException ex) {
//                Logger.getLogger(editMovies.class.getName()).log(Level.SEVERE, null, ex);
//            }
}

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(movieAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(movieAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(movieAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(movieAdd.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new movieAdd().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField Id;
    private javax.swing.JRadioButton bluRay;
    private javax.swing.JFileChooser directoryChooser;
    private javax.swing.JRadioButton dvd;
    private javax.swing.JFileChooser fileChooser;
    private javax.swing.JComboBox genre;
    private javax.swing.JTextField image;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JComboBox rated;
    private javax.swing.JTextField releaseDate;
    private javax.swing.JTextField runTime;
    private javax.swing.JTextField title;
    // End of variables declaration//GEN-END:variables
}
